{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.string.includes.js","webpack:///./src/components/VideoPlayer/DanmuPool.vue?0900","webpack:///src/components/VideoPlayer/DanmuPool.vue","webpack:///./src/components/VideoPlayer/DanmuPool.vue?816a","webpack:///./src/components/VideoPlayer/DanmuPool.vue","webpack:///./node_modules/core-js/internals/not-a-regexp.js","webpack:///./src/components/VideoPlayer/DanmuPool.vue?fe83","webpack:///./node_modules/core-js/internals/correct-is-regexp-logic.js","webpack:///./node_modules/core-js/modules/es.array.includes.js"],"names":["$","notARegExp","requireObjectCoercible","correctIsRegExpLogic","target","proto","forced","includes","searchString","String","this","indexOf","arguments","length","undefined","render","_vm","_h","$createElement","_c","_self","ref","staticClass","staticRenderFns","props","danmu","isPlaying","data","MAX_COUNT_INLINE","TRACK_COUNT","barrages","rollDomPool","topDomPool","bottomDomPool","lastDom","timer","interval","freeRollTrack","freeTopTrack","freeBottomTrack","container","cssLsit","watch","flag","danmuPlay","danmuPause","methods","init","$refs","innerHTML","span","className","style","top","addEventListener","animationName","transform","border","key","doms","push","el","row","col","isFree","isAppended","findFreeRollDom","track","find","getTrack","type","trackType","i","shootRollDanmu","domItem","appendChild","innerText","content","duration","clientWidth","speed","willCatch","delay","animationDelay","JSON","parse","keys","forEach","isCurr","animationDuration","setTimeout","shootFixedDanmu","domPoll","document","createElement","visibility","animationPlayState","setInterval","danmuType","rollTrack","dom","clearInterval","mounted","beforeDestroy","component","isRegExp","module","exports","it","TypeError","wellKnownSymbol","MATCH","METHOD_NAME","regexp","e","f","$includes","addToUnscopables","arrayMethodUsesToLength","USES_TO_LENGTH","ACCESSORS","1"],"mappings":"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","file":"js/chunk-3bececd4.5ad6fe10.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\n\n// `String.prototype.includes` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.includes\n$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~String(requireObjectCoercible(this))\n      .indexOf(notARegExp(searchString), arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"container\",staticClass:\"danmu-pool\"})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"danmu-pool\" ref=\"container\"></div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    danmu: { type: Array, default: () => [] },\r\n    isPlaying: { type: Boolean }\r\n  },\r\n  data () {\r\n    return {\r\n      // 每行最大弹幕数\r\n      MAX_COUNT_INLINE: 8,\r\n      // 轨道个数\r\n      TRACK_COUNT: 12,\r\n      // 弹幕数组\r\n      barrages: [],\r\n      // DOM 池\r\n      rollDomPool: [],\r\n      topDomPool: [],\r\n      bottomDomPool: [],\r\n      // 每个轨道的上一条弹幕\r\n      lastDom: [],\r\n      // 定时器\r\n      timer: null,\r\n      // 取弹幕的时间间隔 ms\r\n      interval: 300,\r\n      // 弹幕通道\r\n      freeRollTrack: [],\r\n      freeTopTrack: [],\r\n      freeBottomTrack: [],\r\n      // 弹幕容器\r\n      container: null,\r\n      // 自定义样式\r\n      cssLsit: ['color', 'font-size']\r\n    }\r\n  },\r\n  watch: {\r\n    isPlaying (flag) {\r\n      // console.log(flag)\r\n      if (flag) {\r\n        this.danmuPlay()\r\n      } else {\r\n        this.danmuPause()\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    /* 初始化 */\r\n    init () {\r\n      this.$refs.container.innerHTML = ''\r\n      // 初始化 rollDomPool\r\n      for (let row = 0; row < this.TRACK_COUNT; row++) {\r\n        const doms = []\r\n        for (let col = 0; col < this.MAX_COUNT_INLINE; col++) {\r\n          // 初始化 dom，重复利用这些 dom\r\n          const span = document.createElement('span')\r\n          // 固定每个通道内 dom 元素的 top\r\n          span.className = 'roll-danmu'\r\n          span.style.top = `${row * 1.3}em`\r\n\r\n          // animation 完成后的初始化动作\r\n          span.addEventListener('animationend', () => {\r\n            span.style.animationName = ''\r\n            span.style.transform = `translateX(-100%)`\r\n            span.style.border = 'none'\r\n\r\n            // 清空自定义样式\r\n            this.cssLsit.forEach((key) => {\r\n              span.style[key] = null\r\n            })\r\n\r\n            // 设置当前 dom 状态为空闲\r\n            if (this.rollDomPool[row][col]) {\r\n              this.rollDomPool[row][col].isFree = true\r\n            }\r\n          })\r\n\r\n          doms.push({\r\n            el: span,\r\n            row,\r\n            col,\r\n            isFree: true,\r\n            isAppended: false\r\n          })\r\n        }\r\n        // 放入第 row 个通道\r\n        this.rollDomPool.push(doms)\r\n      }\r\n\r\n      // freeRollTrack 标记每个通道是否处于空闲状态\r\n      for (let row = 0; row < this.TRACK_COUNT; row++) {\r\n        this.freeRollTrack[row] = true\r\n        this.freeTopTrack[row] = true\r\n        this.freeBottomTrack[row] = true\r\n      }\r\n    },\r\n    /* 获取可以发送滚动弹幕的 dom */\r\n    findFreeRollDom (track) {\r\n      return this.rollDomPool[track].find((item) => item.isFree)\r\n    },\r\n    /* 获取可以发射弹幕的通道 */\r\n    getTrack (type) {\r\n      let trackType = null\r\n      if (type === 'roll') {\r\n        trackType = this.freeRollTrack\r\n      } else if (type === 'top') {\r\n        trackType = this.freeTopTrack\r\n      } else if (type === 'bottom') {\r\n        trackType = this.freeBottomTrack\r\n      } else {\r\n        return -1\r\n      }\r\n\r\n      for (let i = 0; i < this.TRACK_COUNT; i++) {\r\n        if (trackType[i]) {\r\n          return i\r\n        }\r\n      }\r\n      return -1\r\n    },\r\n    /* 发送滚动弹幕 */\r\n    shootRollDanmu (domItem, danmu, track) {\r\n      // console.log(domItem, danmu, track)\r\n      // 设置当前通道状态为非空闲\r\n      this.freeRollTrack[track] = false\r\n      // 设置当前 dom 为非空闲\r\n\r\n      // console.log(JSON.stringify(domItem))\r\n      domItem.isFree = false\r\n      // console.log(domItem.isFree)\r\n\r\n      const span = domItem.el\r\n      // 如果该 dom 还没有添加到视图容器中，把它添加到容器\r\n      if (!domItem.isAppended && this.container) {\r\n        domItem.isAppended = true\r\n        this.container.appendChild(span)\r\n      }\r\n\r\n      // 添加弹幕内容，可以获取弹幕元素的宽高\r\n      span.innerText = danmu.content\r\n      // animation-duration 时间，把容器宽度分为 150 份\r\n      domItem.duration = this.container.clientWidth / 150\r\n      domItem.speed = (this.container.clientWidth + span.clientWidth) / domItem.duration\r\n      // 延迟时间\r\n      let delay = 0\r\n\r\n      // 每个 lastDom 通道用来存放最后一条弹幕的信息，用于和新弹幕的比较\r\n      const lastDom = this.lastDom[track]\r\n      // 如果上一个 dom 为非空闲（在动画中），要看看新弹幕会不会追上旧弹幕：\r\n      //    新弹幕的右侧会不会追上上一条弹幕的右侧\r\n      if (lastDom && !lastDom.isFree) {\r\n        // 上一条弹幕的 剩余路程 = 弹幕的右侧 - 容器的左侧\r\n        const restDistance = lastDom.el.getBoundingClientRect().right - this.container.getBoundingClientRect().left\r\n        // 剩余时间 = 剩余路程 / 上一条弹幕的速度\r\n        const restTime = restDistance / lastDom.speed\r\n        // 新弹幕能跑的路程 = 新弹幕的速度 * 剩余时间\r\n        const catchDistance = domItem.speed * restTime\r\n        // 如果这段时间够新弹幕跑完，说明会追上\r\n        const willCatch = catchDistance - this.container.clientWidth\r\n        if (willCatch > 0) {\r\n          // 延迟播放\r\n          delay = willCatch / domItem.speed\r\n          span.style.animationDelay = `${delay}s`\r\n        }\r\n      }\r\n      // 存放这条弹幕的信息\r\n      this.lastDom[track] = domItem\r\n\r\n      // 添加自定义样式\r\n      if (danmu.style) {\r\n        if (typeof danmu.style === 'string') {\r\n          danmu.style = JSON.parse(danmu.style)\r\n        }\r\n        const keys = Object.keys(danmu.style)\r\n        keys.forEach((key) => {\r\n          // 检查样式合法性\r\n          if (this.cssLsit.includes(key)) {\r\n            span.style[key] = danmu.style[key]\r\n          }\r\n        })\r\n      }\r\n\r\n      // 刚刚发的弹幕\r\n      if (danmu.isCurr) {\r\n        span.style.border = '1px solid #FF6B6B'\r\n      }\r\n\r\n      // 添加动画效果\r\n      span.style.animationName = 'danmu-roll'\r\n      // 起始从屏幕右侧切入\r\n      span.style.transform = `translateX(${this.container.clientWidth}px)`\r\n      span.style.animationDuration = `${domItem.duration}s`\r\n\r\n      // 弹幕右侧完全进入容器后，才能开始放下一条\r\n      // t(s) = 弹幕的宽度 / 弹幕的移速\r\n      setTimeout(() => {\r\n        this.freeRollTrack[track] = true\r\n      }, (span.clientWidth / domItem.speed + delay) * 1000)\r\n    },\r\n    /* 发送顶部/底部弹幕 */\r\n    shootFixedDanmu (type, danmu, track) {\r\n      let domPoll = null\r\n      if (type === 'top') {\r\n        domPoll = this.topDomPool\r\n      } else if (type === 'bottom') {\r\n        domPoll = this.bottomDomPool\r\n      } else {\r\n        return\r\n      }\r\n\r\n      // 设置当前通道状态为非空闲\r\n      this.freeTopTrack[track] = false\r\n\r\n      // 弹幕显示持续时间\r\n      const duration = 1.5\r\n\r\n      // 动态复用 dom\r\n      let span\r\n      // 如果 domPool 中没有该通道，动态创建并 append 到 container 容器\r\n      //    如果有，直接拿\r\n      if (!domPoll[track]) {\r\n        span = document.createElement('div')\r\n        span.className = 'fixed-danmu'\r\n        span.style[type] = `${track * 1.3}em`\r\n        span.style.animationName = 'danmu-away'\r\n        span.style.animationDuration = `${duration}s`\r\n\r\n        this.container.appendChild(span)\r\n      } else {\r\n        span = domPoll[track]\r\n      }\r\n\r\n      // 动画结束后初始化\r\n      span.addEventListener('animationend', () => {\r\n        span.style.visibility = 'hidden'\r\n\r\n        // 清空自定义样式\r\n        this.cssLsit.forEach((key) => {\r\n          span.style[key] = null\r\n        })\r\n\r\n        // 设置通道为空闲\r\n        this.freeTopTrack[track] = true\r\n      })\r\n\r\n      span.style.visibility = 'visible'\r\n      span.innerText = danmu.content\r\n\r\n      // 刚刚发的弹幕\r\n      if (danmu.isCurr) {\r\n        span.style.border = '1px solid #FF6B6B'\r\n      }\r\n\r\n      // 添加自定义样式\r\n      if (danmu.style) {\r\n        if (typeof danmu.style === 'string') {\r\n          danmu.style = JSON.parse(danmu.style)\r\n        }\r\n        const keys = Object.keys(danmu.style)\r\n        keys.forEach((key) => {\r\n          // 检查样式合法性\r\n          if (this.cssLsit.includes(key)) {\r\n            span.style[key] = danmu.style[key]\r\n          }\r\n        })\r\n      }\r\n    },\r\n    /* 播放弹幕动画 */\r\n    danmuPlay () {\r\n      // 开始播放\r\n      for (let row = 0; row < this.TRACK_COUNT; row++) {\r\n        for (let col = 0; col < this.MAX_COUNT_INLINE; col++) {\r\n          if (!this.rollDomPool[row][col].isFree) {\r\n            this.rollDomPool[row][col].el.style.animationPlayState = ''\r\n          }\r\n        }\r\n      }\r\n      // 每隔一段时间取弹幕\r\n      this.timer = setInterval(() => {\r\n        // 有弹幕就取\r\n        if (this.danmu.length > 0) {\r\n          // 取出第一条弹幕\r\n          const danmu = this.danmu.shift()\r\n          // 判断弹幕类型\r\n          const danmuType = danmu.type\r\n          if (danmuType === 'roll') {\r\n            // 获取空闲通道\r\n            // console.log('danmu', danmu)\r\n            const rollTrack = this.getTrack(danmuType)\r\n            if (rollTrack > -1) {\r\n              const dom = this.findFreeRollDom(rollTrack)\r\n              if (dom != null) {\r\n                this.shootRollDanmu(dom, danmu, rollTrack)\r\n                return\r\n              }\r\n            }\r\n            this.danmu.push(danmu)\r\n          } else if (danmuType === 'top' || danmuType === 'bottom') {\r\n            // 获取空闲通道\r\n            const track = this.getTrack(danmuType)\r\n            if (track > -1) {\r\n              this.shootFixedDanmu(danmuType, danmu, track)\r\n            } else {\r\n              this.danmu.push(danmu)\r\n            }\r\n          }\r\n        }\r\n      }, this.interval)\r\n    },\r\n    /* 停止播放弹幕 */\r\n    danmuPause () {\r\n      clearInterval(this.timer)\r\n      for (let row = 0; row < this.TRACK_COUNT; row++) {\r\n        for (let col = 0; col < this.MAX_COUNT_INLINE; col++) {\r\n          if (!this.rollDomPool[row][col].isFree) {\r\n            this.rollDomPool[row][col].el.style.animationPlayState = 'paused'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  mounted () {\r\n    this.container = this.$refs.container\r\n    this.init()\r\n    if (this.isPlaying) {\r\n      this.danmuPlay()\r\n    }\r\n  },\r\n  beforeDestroy () {\r\n    this.danmuPause()\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.danmu-pool {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n\r\n  .roll-danmu {\r\n    position: absolute;\r\n    padding: 0 6px;\r\n    color: #ffffff;\r\n    font-size: 23px;\r\n    line-height: 1.3em;\r\n    animation-timing-function: linear;\r\n  }\r\n\r\n  .fixed-danmu {\r\n    position: absolute;\r\n    left: 50%;\r\n    color: #ffffff;\r\n    font-size: 23px;\r\n    padding: 0 4px 0 2px;\r\n    animation-timing-function: linear;\r\n    transform: translateX(-50%);\r\n  }\r\n\r\n  @keyframes danmu-roll {\r\n    100% {\r\n      transform: translateX(-100%);\r\n    }\r\n  }\r\n\r\n  @keyframes danmu-away {\r\n    100% {\r\n      visibility: hidden;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DanmuPool.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DanmuPool.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DanmuPool.vue?vue&type=template&id=fd06af14&\"\nimport script from \"./DanmuPool.vue?vue&type=script&lang=js&\"\nexport * from \"./DanmuPool.vue?vue&type=script&lang=js&\"\nimport style0 from \"./DanmuPool.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var isRegExp = require('../internals/is-regexp');\n\nmodule.exports = function (it) {\n  if (isRegExp(it)) {\n    throw TypeError(\"The method doesn't accept regular expressions\");\n  } return it;\n};\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DanmuPool.vue?vue&type=style&index=0&lang=less&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DanmuPool.vue?vue&type=style&index=0&lang=less&\"","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\nmodule.exports = function (METHOD_NAME) {\n  var regexp = /./;\n  try {\n    '/./'[METHOD_NAME](regexp);\n  } catch (e) {\n    try {\n      regexp[MATCH] = false;\n      return '/./'[METHOD_NAME](regexp);\n    } catch (f) { /* empty */ }\n  } return false;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });\n\n// `Array.prototype.includes` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true, forced: !USES_TO_LENGTH }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n"],"sourceRoot":""}